@startuml
hide circle
hide methods
hide stereotype
show <<Enumeration>> stereotype
skinparam class {
   BackgroundColor<<Enumeration>> #E6F5F7
   BackgroundColor<<Ref>> #FFFFE0
   BackgroundColor<<Pivot>> #FFFFFFF
   BackgroundColor<<SimpleType>> #E2F0DA
   BackgroundColor #FCF2E3
}

class ProductOfferingPrice <<Pivot>> {
    description : String
    href : String
    id : String
    isBundle : Boolean
    lastUpdate : DateTime
    lifecycleStatus : String
    name : String
    percentage : Float
    price : Money
    priceType : String
    recurringChargePeriodLength : Integer
    recurringChargePeriodType : String
    unitOfMeasure : Quantity
    validFor : TimePeriod
    version : String
    @baseType : String
    @schemaLocation : String
    @type : String
}

class ProductOfferingPriceRelationship  <<Ref>> {
    href : String
    id : String
    name : String
    relationshipType : String
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class PlaceRef  <<Ref>> {
    href : Uri
    id : String [1]
    name : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class BundledProductOfferingPriceRelationship  <<Ref>> {
    href : String
    id : String
    name : String
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class ProductOfferingTerm  {
    description : String
    duration : Quantity
    name : String
    validFor : TimePeriod
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class ProductSpecificationCharacteristicValueUse  {
    description : String
    id : String
    maxCardinality : Integer
    minCardinality : Integer
    name : String
    validFor : TimePeriod
    valueType : String
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class ProductSpecificationRef  <<Ref>> {
    href : Uri
    id : String [1]
    name : String
    version : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class TargetProductSchema  {
    @schemaLocation : Uri [1]
    @type : String [1]
}

class CharacteristicValueSpecification  {
    isDefault : Boolean
    rangeInterval : String
    regex : String
    unitOfMeasure : String
    validFor : TimePeriod
    value : Any
    valueFrom : Integer
    valueTo : Integer
    valueType : String
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class TaxItem  {
    href : Uri
    id : String
    taxAmount : Money
    taxCategory : String
    taxRate : Float
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class PricingLogicAlgorithm  {
    description : String
    href : Uri
    id : String
    name : String
    plaSpecId : String
    validFor : TimePeriod
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class ConstraintRef  <<Ref>> {
    href : Uri
    id : String [1]
    name : String
    version : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

TaxItem "0..*" <-left-* ProductOfferingPrice : tax

ProductOfferingPrice *-right-> "0..*" PlaceRef : place

ConstraintRef "0..*" <--* ProductOfferingPrice : constraint

ProductOfferingPriceRelationship "0..*" <--* ProductOfferingPrice : popRelationship

ProductOfferingTerm "0..*" <--* ProductOfferingPrice : productOfferingTerm

ProductOfferingPrice *-->  "0..*" BundledProductOfferingPriceRelationship : bundledPopRelationship

ProductOfferingPrice *-->  "0..*" PricingLogicAlgorithm : pricingLogicAlgorithm

ProductOfferingPrice *-->  "0..*" ProductSpecificationCharacteristicValueUse : prodSpecCharValueUse

ProductSpecificationCharacteristicValueUse *-->  "0..*" CharacteristicValueSpecification : productSpecCharacteristicValue

ProductSpecificationCharacteristicValueUse *-->  "0..1" ProductSpecificationRef : productSpecification

ProductSpecificationRef *-->  "0..1" TargetProductSchema : targetProductSchema

@enduml