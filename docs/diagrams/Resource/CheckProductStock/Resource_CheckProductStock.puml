@startuml
hide circle
hide methods
hide stereotype
show <<Enumeration>> stereotype
skinparam class {
   BackgroundColor<<Enumeration>> #E6F5F7
   BackgroundColor<<Ref>> #FFFFE0
   BackgroundColor<<Pivot>> #FFFFFFF
   BackgroundColor<<SimpleType>> #E2F0DA
   BackgroundColor #FCF2E3
}

class CheckProductStock <<Pivot>> {
    completedCheckProductStockDate : DateTime
    creationDate : DateTime
    href : String
    id : String
    instantSyncCheck : Boolean
    provideAlternative : Boolean
    requestedAvailabilityDate : DateTime
    requestedCheckProductStockDate : DateTime
    state : TaskStateType
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class RelatedParty  {
    href : Uri
    id : String [1]
    name : String
    role : String
    @baseType : String
    @referredType : String [1]
    @schemaLocation : Uri
    @type : String
}

class CheckProductStockItem  {
    availabilityResult : String
    id : String
    provideAlternative : Boolean
    requestedQuantity : Quantity
    state : TaskStateType
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class AlternateProductStock  {
    alternateAvailabilityDate : DateTime
    alternateQuantity : Quantity
    id : String
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class PlaceRefOrValue  {
    href : String
    id : String
    name : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class ProductStockRef  <<Ref>> {
    href : Uri
    id : String [1]
    name : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class ProductRefOrValue  {
    description : String
    href : String
    id : String
    isBundle : Boolean
    isCustomerVisible : Boolean
    name : String
    orderDate : DateTime
    productSerialNumber : String
    startDate : DateTime
    status : ProductStatusType
    terminationDate : DateTime
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class ProductSpecificationRef  <<Ref>> {
    href : Uri
    id : String [1]
    name : String
    version : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class TargetProductSchema  {
    @schemaLocation : Uri [1]
    @type : String [1]
}

class Characteristic  {
    id : String
    name : String [1]
    value : Any [1]
    valueType : String
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class CharacteristicRelationship  <<Ref>> {
    href : Uri
    id : String
    relationshipType : String
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class BillingAccountRef  <<Ref>> {
    href : String
    id : String [1]
    name : String
    ratingType : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class RelatedProductOrderItem  {
    href : Uri
    id : String
    orderItemAction : String
    orderItemId : String [1]
    productOrderHref : String
    productOrderId : String [1]
    role : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class ServiceRef  <<Ref>> {
    href : Uri
    id : String [1]
    name : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class ResourceRef  <<Ref>> {
    href : Uri
    id : String [1]
    name : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class RelatedPlaceRefOrValue  {
    href : String
    id : String
    name : String
    role : String [1]
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class AgreementItemRef  <<Ref>> {
    agreementItemId : String
    href : Uri
    id : String [1]
    name : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class ProductOfferingRef  <<Ref>> {
    href : Uri
    id : String [1]
    name : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class ProductTerm  {
    description : String
    duration : Quantity
    href : Uri
    id : String
    name : String
    validFor : TimePeriod
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class ProductRelationship  <<Ref>> {
    href : Uri
    id : String
    relationshipType : String [1]
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class ProductPrice  {
    description : String
    href : Uri
    id : String
    name : String
    priceType : String [1]
    recurringChargePeriod : String
    unitOfMeasure : String
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class ProductOfferingPriceRef  <<Ref>> {
    href : Uri
    id : String [1]
    name : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class Price  {
    dutyFreeAmount : Money
    href : Uri
    id : String
    percentage : Float
    taxIncludedAmount : Money
    taxRate : Float
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class PriceAlteration  {
    applicationDuration : Integer
    description : String
    href : Uri
    id : String
    name : String
    priceType : String [1]
    priority : Integer
    recurringChargePeriod : String
    unitOfMeasure : String
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class ProductStatusType <<Enumeration>> {
    created
    pendingActive
    cancelled
    active
    pendingTerminate
    terminated
    suspended
    aborted
}

class ProductStock  {
    creationDate : DateTime
    description : String
    href : String
    id : String
    lastInventoryDate : DateTime
    lastUpdate : DateTime
    maxStockLevel : Quantity
    minStockLevel : Quantity
    name : String
    productStockLevel : Quantity
    productStockStatusType : ProductStockStatusType
    productStockUsageType : ProductStockUsageType
    reorderQuantity : Quantity
    replenishmentDate : DateTime
    stockLevelAlert : Quantity
    stockLevelCategory : String
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class ProductStockRelationship  {
    relationshipType : String [1]
    @baseType : String
    @schemaLocation : Uri
    @type : String
}

class ChannelRef  <<Ref>> {
    href : Uri
    id : String [1]
    name : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class ProductStockUsageType <<Enumeration>> {
    inTransit
    onDisplay
    damaged
    returned
    replenishmentInProgress
    inShop
}

class MarketSegmentRef  <<Ref>> {
    href : String
    id : String [1]
    name : String
    @baseType : String
    @referredType : String
    @schemaLocation : Uri
    @type : String
}

class ProductStockStatusType <<Enumeration>> {
    reserved
    available
    unavailable
    unknown
}

class TaskStateType <<Enumeration>> {
    accepted
    terminatedWithError
    inProgress
    done
}

CheckProductStock *-right-> "0..*" CheckProductStockItem : checkProductStockItem

TaskStateType <-left[hidden]- CheckProductStock

CheckProductStock *-->  "0..1" PlaceRefOrValue : place

CheckProductStock *-->  "0..*" RelatedParty : relatedParty

PlaceRefOrValue "0..1" <-left-* AlternateProductStock : alternatePlace

CheckProductStockItem *-->  "0..*" AlternateProductStock : alternate

RelatedParty "0..*" <-left-* ProductStock : relatedParty

CheckProductStockItem *-->  "0..1" ProductStock : checkedProductStock

ProductRefOrValue *-right-> "0..*" ProductRefOrValue : product

ProductRefOrValue *-->  "0..*" RelatedPlaceRefOrValue : place

RelatedPlaceRefOrValue "0..1" <--* ProductStock : place

ResourceRef "0..*" <--* ProductStock : resource

ProductRefOrValue *-->  "0..*" ResourceRef : realizingResource

ProductRefOrValue *-->  "0..*" RelatedParty : relatedParty

ProductRefOrValue *-->  "0..1" BillingAccountRef : billingAccount

ProductRefOrValue -right[hidden]-> ProductStatusType

ProductRelationship "0..*" <--* ProductRefOrValue : productRelationship

ProductRefOrValue *-->  "0..*" ProductPrice : productPrice

ProductRefOrValue "0..1" <--* AlternateProductStock : alternateProduct

AlternateProductStock *-->  "0..1" ProductStockRef : alternateStock

ProductRelationship *-->  "1" ProductRefOrValue : product

BillingAccountRef "0..1" <--* ProductPrice : billingAccount

ProductPrice *-->  "1" Price : price

ProductPrice *-->  "0..1" ProductOfferingPriceRef : productOfferingPrice

ProductPrice *-->  "0..*" PriceAlteration : productPriceAlteration

Price "1" <--* PriceAlteration : price

ProductOfferingPriceRef "0..1" <--* PriceAlteration : productOfferingPrice

ProductStockRef "0..1" <--* ProductStockRelationship : stockLevel

ProductStock *-->  "0..*" ProductStockRelationship : productStockRelationship

ProductRefOrValue "0..1" <--* ProductStock : stockedProduct

ProductStock -right[hidden]-> ProductStockStatusType

ProductStockStatusType -right[hidden]-> ProductStockUsageType

ProductSpecificationRef "0..1" <--* ProductRefOrValue : productSpecification

AgreementItemRef "0..*" <--* ProductRefOrValue : agreement

ProductTerm "0..*" <--* ProductRefOrValue : productTerm

ProductOfferingRef "0..1" <--* ProductRefOrValue : productOffering

RelatedProductOrderItem "0..*" <--* ProductRefOrValue : productOrderItem

ServiceRef "0..*" <--* ProductRefOrValue : realizingService

Characteristic "0..*" <--* ProductRefOrValue : productCharacteristic

ProductStock *-->  "0..*" ChannelRef : channel

ProductStock *-->  "0..*" MarketSegmentRef : marketSegment

ProductSpecificationRef *-right-> "0..1" TargetProductSchema : targetProductSchema

Characteristic *-right-> "0..*" CharacteristicRelationship : characteristicRelationship

@enduml